build:docker:
  image: docker:20-dind
  variables:
    # using "docker" as the host is only possible if you alias the service below
    DOCKER_HOST: tcp://docker:2375 
    # could be wrong here but although Docker defaults to overlay2, 
    # Docker-in-Docker (DIND) does not according to the following GitLab doc: 
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-the-overlayfs-driver
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    CONTAINER_IMAGE: leokuan/webhook-app:${CI_COMMIT_SHORT_SHA}
  services:
    - name: docker:20-dind
      alias: docker
      # in our experience although you'd assume this would be sufficient, this did 
      # nothing to prevent connection errors without `DOCKER_TLS_CERTDIR` being set 
      # to an empty string, and I would call that beyond mildly infuriating.
      command: ["--tls=false"]
  before_script:
    - echo $DOCKER_REGISTRY_PASSWORD | docker login -u $DOCKER_REGISTRY_USER --password-stdin
#    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
  script:
    - docker build -t ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE}
    - docker tag ${CONTAINER_IMAGE} leokuan/webhook-app:latest
    #  --tag ${CONTAINER_IMAGE}
    - docker push ${CONTAINER_IMAGE}


deploy:
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
#  - kubectl config get-contexts
#  - kubectl config view
  - kubectl config use-context devops/webhook-app:agent1
  - kubectl apply -f webhook-app-deployment.yaml
#  - kubectl config current-context
#  - kubectl version
#  - kubectl config use-context devops/webhook-app:k8s-agent
#  - kubectl get pods
